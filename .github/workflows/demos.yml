name: demos

on: [push]

jobs:
  # react-redux-typescript-sass-boilerplates/demo
  demo:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [10.x, 12.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.1
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2.1.0
      with:
        node-version: ${{ matrix.node-version }}
        check-latest: true
    - name: Install Dependencies
      run: yarn install --frozen-lockfile
    - name: Run Tests
      run: yarn test
    - name: Build
      run: yarn build
    - name: Post Coverage
      uses: codecov/codecov-action@v1.0.10
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '12.x'

    defaults:
      run:
        shell: bash
        working-directory: ./demo

    env:
      CI: true

  # react-redux-typescript-sass-boilerplates/demo-container-pattern
  demo-container:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [10.x, 12.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.1
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2.1.0
      with:
        node-version: ${{ matrix.node-version }}
        check-latest: true
    - name: Install Dependencies
      run: yarn install --frozen-lockfile
    - name: Run Tests
      run: yarn test
    - name: Build
      run: yarn build
    - name: Post Coverage
      uses: codecov/codecov-action@v1.0.10
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '12.x'

    defaults:
      run:
        shell: bash
        working-directory: ./demo-container-pattern

    env:
      CI: true